install.packages("ggplot2")
library("caret")
install.packages("caret")
dd <- data.frame(wafer = factor(rep(1:5, each = 6)),
operator = factor(rep(rep(1:3, each = 2), 5)),
thickness = c(0.62, 0.66, 0.53, 0.53, 0.51, 0.55,
0.99, 1.00, 1.05, 0.93, 1.05, 1.02,
0.82, 0.81, 0.80, 0.77, 0.90, 0.77,
0.85, 0.89, 0.83, 0.76, 0.79, 0.81,
0.59, 0.48, 0.39, 0.40, 0.46, 0.51))
dd
library(ggplot2)
dsumm <- ddply(dd, .(wafer, operator), summarise, tmean = mean(thickness),
tmin = min(thickness), tmax = max(thickness),
tsd = sd(thickness))
library(data.table)
dsumm <- ddply(dd, .(wafer, operator), summarise, tmean = mean(thickness),
tmin = min(thickness), tmax = max(thickness),
tsd = sd(thickness))
library(plyr)
dsumm <- ddply(dd, .(wafer, operator), summarise, tmean = mean(thickness),
tmin = min(thickness), tmax = max(thickness),
tsd = sd(thickness))
p1 <- ggplot(dd) +
geom_point(aes(x = wafer, y = thickness)) +
geom_errorbar(data = dsumm, aes(x = wafer, y = tmean,
ymin = tmin, ymax = tmax), colour = 'blue') +
geom_segment(data = dsumm, aes(x = wafer, y = tmean, yend = tmean,
xend = as.numeric(wafer) + 0.2),  colour = 'blue') +
geom_segment(data = dsumm, aes(x = wafer, y = tmean, yend = tmean,
xend = as.numeric(wafer) - 0.2),  colour = 'blue') +
facet_wrap( ~ operator, nrow = 1) + xlab("")
p2 <- ggplot(dsumm, aes(x = wafer, y = tsd)) +
geom_point(colour = 'blue') + geom_line(aes(group = 1), size =
1, colour = 'blue') +
facet_wrap( ~ operator, nrow = 1)
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2)
setwd("C:/Users/lishunw.AUTH/My Work/program/github/R-coding/RE")
getwd()
}
for (i in MIBF_list)
a
MIBF_list<-c(1, 2, 3)
series_sys_MIBF <- function (MIBF_list)
{
for (i in MIBF_list)
{
print (i)
}
}
series_sys_MIBF(MIBF_list)
MIBF_list<-c(80000, 100000, 12000)
series_sys_MIBF <- function (MIBF_list)
{
landa_total=0
for (i in MIBF_list)
{
landa_part<-1/i
landa_total=landa_total+landa_part
}
return 1/landa_total
}
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-1/i
landa_total=landa_total+landa_part
}
MIBF_sys <- 1/landa_sys
return MIBF_sys
}
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-1/i
landa_sys=landa_total+landa_part
}
MIBF_sys <- 1/landa_sys
return MIBF_sys
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-1/i
landa_sys=landa_total+landa_part
}
MIBF_sys <- (1/landa_sys)
return (MIBF_sys)
}
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-(1/i)
landa_sys=landa_total+landa_part
}
MIBF_sys <- (1/landa_sys)
return (MIBF_sys)
}
series_sys_MIBF(MIBF_list)
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-(1/i)
landa_sys=landa_sys+landa_part
}
MIBF_sys <- (1/landa_sys)
return (MIBF_sys)
}
series_sys_MIBF(MIBF_list)
2parallel_sys_MIBF <- funciton(MIBF_list)
{
MIBF_sys <- 0
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return MIBF_sys
}
2parallel_sys_MIBF <- funciton(MIBF_list){
MIBF_sys <- 0
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return MIBF_sys
}
2parallel_sys_MIBF <- funciton(MIBF_list){
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return MIBF_sys
}
2parallel_sys_MIBF <- funciton(MIBF_list){
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list){
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list){
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
print (landa_1)
#   MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
#   return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
print (landa_1)
#   MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
#   return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
print (landa_1)
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys = (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- ((1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2))
return (MIBF_sys)
}
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- ((1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2))
}
2parallel_sys_MIBF(12000, 13000)
2parallel_sys_MIBF(c(12000 13000))
2parallel_sys_MIBF(c(12000. 13000))
2parallel_sys_MIBF(c(12000, 13000))
MIBF_list <- c(12000, 13000)
2parallel_sys_MIBF(MIBF_list)
MIBF_list[1]
MIBF_list <- c(12000, 13000)
2parallel_sys_MIBF(MIBF_list)
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
print (landa_1)
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- ((1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2))
}
MIBF_list <- c(12000, 13000)
2parallel_sys_MIBF(MIBF_list)
1/12000
2parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
print (landa_1)
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
print (MIBF_sys)
}
MIBF_list <- c(12000, 13000)
2parallel_sys_MIBF(MIBF_list)
parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
print (landa_1)
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
print (MIBF_sys)
}
parallel_sys_MIBF(MIBF_list)
MIBF_list <- c(12000, 13000)
MIBF_list_sub_par <- c(12000, 13000)
parallel_sys_MIBF(MIBF_list)
MIBF_list <- c(sub_sys, 80000, 100000)
series_sys_MIBF(MIBF_list)
parallel_sys_MIBF <- function(MIBF_list)
{
landa_1 <- 1/MIBF_list[1]
print (landa_1)
landa_2 <- 1/MIBF_list[2]
MIBF_sys <- (1/landa_1) + (1/landa_2) - 1/(landa_1+landa_2)
return (MIBF_sys)
}
series_sys_MIBF <- function (MIBF_list)
{
landa_sys=0
for (i in MIBF_list)
{
landa_part<-(1/i)
landa_sys=landa_sys+landa_part
}
MIBF_sys <- (1/landa_sys)
return (MIBF_sys)
}
MIBF_list_sub_par <- c(12000, 13000)
sub_sys <- parallel_sys_MIBF(MIBF_list)
MIBF_list <- c(sub_sys, 80000, 100000)
series_sys_MIBF(MIBF_list)
